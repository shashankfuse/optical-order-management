generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   // "admin" | "staff"
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  active    Boolean   @default(true)
  logoUrl   String?

  products  Product[]
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id               Int       @id @default(autoincrement())
  brandId          Int
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)

  name             String    @unique   // âœ… ensures upsert works
  type             String
  isStock          Boolean   @default(false)
  coatings         Json
  features         Json
  baseTimelineDays Int
  price            Int?

  active           Boolean   @default(true)
  orders           Order[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Order {
  id             Int      @id @default(autoincrement())
  orderNumber    String   @unique
  customerName   String
  receiptNo      String

  status         String   @default("Pending") // Pending, Processing, etc.
  lensType       String
  placedAfter2pm Boolean  @default(false)
  orderDateISO   String
  arrivalISO     String

  features       Json
  tintCode       String?

  fitting        Boolean  @default(false)
  odDetails      String?
  osDetails      String?
  invoiceNumber  String?

  brandId   Int
  productId Int
  userId    Int
  brand     Brand   @relation(fields: [brandId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}